library IEEE;
use IEEE.std_logic_1164.all;

entity tb_bloco is 
  -- empty 
end tb_bloco;

architecture arch_1 of tb_bloco is

  --DUT component
component bloco is
  port (i_w_EN     : in  std_logic; 
        i_r_EN     : in  std_logic; 
        i_w_ADDR   : in  std_logic_vector(1 downto 0);
        i_r_ADDR   : in  std_logic_vector(1 downto 0);
        i_w_DATA   : in  std_logic_vector(7 downto 0); 
        o_r_DATA   : out std_logic_vector(7 downto 0));        
end component;

signal  w_r_EN, w_w_EN: std_logic;
signal  w_r_ADDR, w_w_ADDR: std_logic_vector(1 downto 0); 
signal  w_r_DATA, w_w_DATA: std_logic_vector(7 downto 0);
begin

  --Connect DUT 
DUV: bloco port map     ( i_r_EN    =>   w_r_EN,
                          i_w_EN    =>   w_w_EN,
                          i_r_ADDR  =>   w_r_ADDR,
                          i_w_ADDR  =>   w_w_ADDR,
                          i_w_DATA  =>   w_w_DATA,
                          o_r_DATA  =>   w_r_DATA);
                           

  process
  begin  
  w_w_EN   <= '0';
  w_r_EN   <= '0';
  w_r_ADDR <= "00";
  w_w_ADDR <= "00";
  w_w_DATA <= "00000000";
  wait for 1 ns;
  assert (w_r_DATA="00000000") report "Fail @ 0" severity error;
  
  w_w_EN   <= '1';
  w_r_EN   <= '0';
  w_r_ADDR <= "00";
  w_w_ADDR <= "00";
  w_w_DATA <= "00000001";
  wait for 1 ns;
  assert (w_r_DATA="00000000") report "Fail @ 1" severity error;
  
  w_w_EN   <= '0';
  w_r_EN   <= '1';
  w_r_ADDR <= "00";
  w_w_ADDR <= "00";
  w_w_DATA <= "00000001";
  wait for 1 ns;
  assert (w_r_DATA="00000000") report "Fail @ 2" severity error;
  
  w_w_EN   <= '1';
  w_r_EN   <= '1';
  w_r_ADDR <= "00";
  w_w_ADDR <= "00";
  w_w_DATA <= "10000001";
  wait for 1 ns;
  assert (w_r_DATA="10000001") report "Fail @ 3" severity error;
  
  w_w_EN   <= '1';
  w_r_EN   <= '1';
  w_r_ADDR <= "01";
  w_w_ADDR <= "01";
  w_w_DATA <= "11000011";
  wait for 1 ns;
  assert (w_r_DATA="11000011") report "Fail @ 4" severity error;
  
  w_w_EN   <= '1';
  w_r_EN   <= '1';
  w_r_ADDR <= "10";
  w_w_ADDR <= "10";
  w_w_DATA <= "11100111";
  wait for 1 ns;
  assert (w_r_DATA="11100111") report "Fail @ 5" severity error;
  
  w_w_EN   <= '1';
  w_r_EN   <= '1';
  w_r_ADDR <= "11";
  w_w_ADDR <= "11";
  w_w_DATA <= "11111111";
  wait for 1 ns;
  assert (w_r_DATA="11111111") report "Fail @ 6" severity error;
  
  
  -- Clear inputs
  
  w_w_EN   <= '0';
  w_r_EN   <= '0';
  w_r_ADDR <= "00";
  w_w_ADDR <= "00";
  w_w_DATA <= "00000000";
  assert false report "Test Done." severity note;
  wait;
  end process;
end arch_1;
